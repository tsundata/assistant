name: Dev

on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  dev:
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: root
          RABBITMQ_DEFAULT_PASS: 123456
        ports:
          - 5672:5672
          - 15672:15672
      redis:
        image: redis:latest
        ports:
          - 6379:6379
      etcd:
        image: bitnami/etcd:3.5.0
        env:
          ALLOW_NONE_AUTHENTICATION: yes
        ports:
          - 2379:2379
          - 2380:2380
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_USER: db
          MYSQL_PASSWORD: 123456
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
      mock_id:
        image: tsundata/mock_id:latest
        ports:
          - 6012:6012

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18

      - name: Install Task
        uses: arduino/setup-task@v1

      ### Lint ###

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.45.2

      ### Build ###

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          install-only: true

      - name: Build
        run: task build

      ### Test ###

      - name: Import Config and Migrate
        run: |
          export ETCD_ADDRESS=127.0.0.1:2379
          cp configs/common.yml.example configs/common.yml
          cp configs/gateway.yml.example configs/gateway.yml
          cp configs/web.yml.example configs/web.yml
          cp configs/classifier.yml.example configs/classifier.yml
          ls -all configs
          go run github.com/tsundata/assistant/cmd/cli config
          go run github.com/tsundata/assistant/cmd/cli migrate

      - name: Run test cases
        run: |
          export ETCD_ADDRESS=127.0.0.1:2379
          task test
          task coverage

      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
