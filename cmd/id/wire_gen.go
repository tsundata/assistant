// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/tsundata/assistant/internal/app/id"
	"github.com/tsundata/assistant/internal/app/id/service"
	"github.com/tsundata/assistant/internal/pkg/app"
	"github.com/tsundata/assistant/internal/pkg/config"
	"github.com/tsundata/assistant/internal/pkg/middleware/jaeger"
	"github.com/tsundata/assistant/internal/pkg/transport/rpc"
)

// Injectors from wire.go:

func CreateApp(id2 string) (*app.Application, error) {
	appConfig := config.NewConfig(id2)
	serviceId := service.NewId()
	initServer := service.CreateInitServerFn(serviceId)
	server, err := rpc.NewServer(appConfig, initServer)
	if err != nil {
		return nil, err
	}
	application, err := id.NewApp(appConfig, server)
	if err != nil {
		return nil, err
	}
	return application, nil
}

// wire.go:

var providerSet = wire.NewSet(config.ProviderSet, jaeger.ProviderSet, rpc.ProviderSet, id.ProviderSet, service.ProviderSet)
