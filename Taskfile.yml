version: '3'

tasks:
  default:
    cmds:
      - go env
      - git version
      - docker version

  check:
    desc: Check befor submitting the code
    cmds:
      - task: lint
      - task: secure
      - task: test
      - task: coverage
      - echo "Both done"

  build:
    desc: Build the go binary.
    cmds:
      - GOVERSION=`go version` goreleaser --snapshot --skip-publish --rm-dist

  wire:
    desc: Code generated by Wire
    cmds:
      - wire ./cmd/...
      - wire ./internal/...

  lint:
    desc: Run golangci-lint check
    cmds:
      - golangci-lint run ./... --timeout=5m

  secure:
    desc: Run Gosec Security Scanner
    cmds:
      - gosec ./...

  proto:
    desc: Generate proto.pb.go
    cmds:
      - go mod vendor
      - buf lint --config buf.yaml
      - go run github.com/tsundata/assistant/cmd/cli clear
      - buf generate
      - protoc-go-inject-tag -input="./api/pb/*.pb.go"
      - git add api/pb/*.pb.go

  release:
    desc: Push github release
    cmds:
      - goreleaser release --snapshot --rm-dist

  docker:
    desc: Docker-compose run
    cmds:
      - docker-compose -f deployments/docker-compose/docker-compose.yml up --build -d

  changelog:
    desc: Generate changelog
    cmds:
      - git-chglog -o CHANGELOG.md

  gentest:
    desc: Generate test cases
    cmds:
      - gotests -w -all internal/{{.CLI_ARGS}}

  cli:
    desc: Run cli
    cmds:
      - go run github.com/tsundata/assistant/cmd/cli {{.CLI_ARGS}}

  cve:
    desc: Vulnerability Scanner
    cmds:
      - trivy fs ./

  test:
    desc: Go test
    cmds:
      - go test -cover -coverprofile=./coverage.out -timeout=10m -short github.com/tsundata/assistant/internal/...

  coverage:
    desc: Go coverage
    cmds:
      - go tool cover -func ./coverage.out

  mock:
    desc: Generate mock files
    cmds:
      - mockgen -package=mock -source=./api/pb/id_grpc.pb.go -destination=./mock/id_client.go
      - mockgen -package=mock -source=./api/pb/message_grpc.pb.go -destination=./mock/message_client.go
      - mockgen -package=mock -source=./api/pb/middle_grpc.pb.go -destination=./mock/middle_client.go
      - mockgen -package=mock -source=./api/pb/todo_grpc.pb.go -destination=./mock/todo_client.go
      - mockgen -package=mock -source=./api/pb/user_grpc.pb.go -destination=./mock/user_client.go
      - mockgen -package=mock -source=./api/pb/chatbot_grpc.pb.go -destination=./mock/chatbot_client.go
      - mockgen -package=mock -source=./api/pb/okr_grpc.pb.go -destination=./mock/okr_client.go
      - mockgen -package=mock -source=./api/pb/storage_grpc.pb.go -destination=./mock/storage_client.go
      - mockgen -package=mock -source=./api/pb/finance_grpc.pb.go -destination=./mock/finance_client.go
      - mockgen -package=mock -source=./internal/app/id/repository/id.go -destination=./mock/id_repository.go
      - mockgen -package=mock -source=./internal/app/chatbot/bot/todo/repository/todo.go -destination=./mock/todo_repository.go
      - mockgen -package=mock -source=./internal/app/message/repository/message.go -destination=./mock/message_repository.go
      - mockgen -package=mock -source=./internal/app/middle/repository/middle.go -destination=./mock/middle_repository.go
      - mockgen -package=mock -source=./internal/app/user/repository/user.go -destination=./mock/user_repository.go
      - mockgen -package=mock -source=./internal/app/chatbot/bot/okr/repository/okr.go -destination=./mock/okr_repository.go
      - mockgen -package=mock -source=./internal/app/chatbot/repository/chatbot.go -destination=./mock/chatbot_repository.go

  swag:
    desc: Generate Swagger docs
    cmds:
      - swag init --dir ./cmd/gateway --parseDependency --parseDepth 2

  migrate:
    desc: Database migration
    cmds:
      - go run github.com/tsundata/assistant/cmd/cli migrate

  fmt:
    desc: fmt
    cmds:
      - gofmt -w internal/
